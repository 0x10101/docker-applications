version: '2'

services:

 docker-ui:
  image: uifd/ui-for-docker
  restart: always
  privileged: true
#  ports:
#   - 9000:9000
  volumes:
   - /var/run/docker.sock:/var/run/docker.sock
  networks:
   mynet:
    ipv4_address: ${SHOWCASE_IP_ADDRESS_DOCKERUI}
  logging:
   driver: "gelf"
   options:
    gelf-address: "udp://172.25.0.100:12201"

 rabbitmq:
  image: marcelmaatkamp/rabbitmq-mqtt-ldap
  restart: always
  hostname: rabbitmq
#  ports:
#   - 15672:15672
  environment:
    RABBITMQ_NODENAME: rabbitmq@rabbitmq
  volumes:
   - ./volumes/rabbitmq/mnesia:/var/lib/rabbitmq/mnesia
  networks:
   mynet:
    ipv4_address: ${SHOWCASE_IP_ADDRESS_RABBITMQ}
  logging:
   driver: "gelf"
   options:
    gelf-address: "udp://172.25.0.100:12201"

 mysql:
  image: mysql
  restart: always
  hostname: mysql
  environment:
   - MYSQL_ROOT_PASSWORD=my-secret-pw
  volumes:
   - ./volumes/mysql:/var/lib/mysql/
   - ./mysql:/docker-entrypoint-initdb.d/
  networks:
   mynet:
    ipv4_address: ${SHOWCASE_IP_ADDRESS_MYSQL}
  logging:
   driver: "gelf"
   options:
    gelf-address: "udp://172.25.0.100:12201"

 nodered:
  build: raptor-node-red
  restart: always
  hostname: nodered
  depends_on:
   - rabbitmq
   - mysql
  links:
   - rabbitmq:rabbitmq
   - mysql:mysql
  ports:
   - 1880:1880
  volumes:
   - ./volumes/nodered:/node-red-data/
  networks:
   mynet:
    ipv4_address: ${SHOWCASE_IP_ADDRESS_NODERED}
  logging:
   driver: "gelf"
   options:
    gelf-address: "udp://172.25.0.100:12201"

 phpmyadmin:
  image: phpmyadmin/phpmyadmin
  restart: always
  hostname: phpmyadmin
# ports:
#  - 8080:80
  depends_on:
   - mysql
  links:
   - mysql:db
  volumes:
   - ./volumes/phpmyadmin:/sessions
  networks:
   mynet:
    ipv4_address: ${SHOWCASE_IP_ADDRESS_PHPMYADMIN}
  logging:
   driver: "gelf"
   options:
    gelf-address: "udp://172.25.0.100:12201"

 phreeze:
  image: marcelmaatkamp/phreeze
  links:
   - mysql:mysql
  depends_on:
   - mysql
  volumes:
   - ./volumes/phreeze/showcase:/var/www/html/showcase
#  ports:
#   - 80:80
  networks:
   mynet:
    ipv4_address: ${SHOWCASE_IP_ADDRESS_PHREEZE}
  logging:
   driver: "gelf"
   options:
    gelf-address: "udp://172.25.0.100:12201"

 elasticsearch-master:
  image: danielguerra/alpine-elasticsearch
  restart: always
  command: -Des.network.bind_host=elasticsearch-master --cluster.name=graylog --node.name=elasticsearch-master --discovery.zen.ping.multicast.enabled=false --network.host=elasticsearch-master
  hostname: elasticsearch-master
  volumes:
   - elastic-data:/usr/share/elasticsearch/data
# ports:
#  - "9200:9200"
#  - "9300:9300"
  networks:
   mynet:
    ipv4_address: ${SHOWCASE_IP_ADDRESS_ES_MASTER}

 elasticsearch-node01:
  image: danielguerra/alpine-elasticsearch
  restart: always
  command: -Des.network.bind_host=elasticsearch-node01 --cluster.name=graylog --node.name=elasticsearch-node01 --discovery.zen.ping.unicast.hosts=master:9300  --network.host=elasticsearch-node01
  hostname: elasticsearch-node01
  links:
   - "elasticsearch-master:master"
  volumes:
    - elastic-data:/usr/share/elasticsearch/data
  networks:
   mynet:
    ipv4_address: ${SHOWCASE_IP_ADDRESS_ES_NODE01}

 mongodb:
  image: mongo:3
  restart: always
  command: "mongod --smallfiles"
# ports:
#  - "27017:27017"
  volumes:
   - mongodb-conf:/etc/mongod.conf:ro
   - mongodb-data:/data/db
  networks:
   mynet:
    ipv4_address: ${SHOWCASE_IP_ADDRESS_MONGODB}
  logging:
   driver: "gelf"
   options:
    gelf-address: "udp://172.25.0.100:12201"

 graylog:
  image: "graylog2/server"
  restart: always
  volumes:
   - graylog-data:/usr/share/graylog/data/journal
   - graylog-conf:/usr/share/graylog/data/config
  environment:
      GRAYLOG_PASSWORD_SECRET: somepasswordpepper
      GRAYLOG_ROOT_PASSWORD_SHA2: 8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      GRAYLOG_WEB_ENDPOINT_URI: http://127.0.0.1:9000/api
# ports:
#  - "9000:9000"
#  - "12201:12201"
#  - "12201:12201/udp"
  links:
   - mongodb:mongo
   - elasticsearch-master:elasticsearch
  depends_on:
   - mongodb
   - elasticsearch-master
   - elasticsearch-node01
  networks:
   mynet:
    ipv4_address: ${SHOWCASE_IP_ADDRESS_GRAYLOG}

 backend:
  build: backend-nodejs
  hostname: backend
  depends_on:
   - rabbitmq
   - mysql
   - graylog
  links:
   - rabbitmq:rabbitmq
   - mysql:mysql
   - graylog:graylog
  # ports:
  #  - 5858:5858 # debug port
  volumes:
   - ./backend-nodejs:/src
  environment:
  # What kind of environment:
  # DEVELOP=0 # autostart processMessages
   - DEVELOP=0 # keep docker image alive for development environment
  #  Alle environment variabelen met hun default waarden
  # graylog2 logging
   - SHOWCASE_GRAYLOG=1
  # - SHOWCASE_GRAYLOG_HOST=graylog
  # - SHOWCASE_GRAYLOG_PORT=12201
  # - SHOWCASE_GRAYLOG_LEVEL=debug
  # console logging
  # - SHOWCASE_LOG_LEVEL=info
  # - SHOWCASE_LOG_META=0
  # mysql server settings
  # - SHOWCASE_MYSQL_HOST=mysql
  # - SHOWCASE_MYSQL_USER=root
  # - SHOWCASE_MYSQL_PASSWORD=my-secret-pw
  # - SHOWCASE_MYSQL_DATABASE=SHOWCASE_GRAYLOG
  # TTN mqtt settings
  # - SHOWCASE_MQTT_SERVER=staging.thethingsnetwork.org
  # - SHOWCASE_MQTT_PORT=1883
   - SHOWCASE_MQTT_USER=${SHOWCASE_TTN_USERNAME_ACC}
   - SHOWCASE_MQTT_PASSWORD=${SHOWCASE_TTN_PASSWORD_ACC}
  # RabbitMQ amqp settings
  # - SHOWCASE_AMQP_SERVER=rabbitmq
  # - SHOWCASE_AMQP_PORT=5672
  # - SHOWCASE_AMQP_USER=guest
  # - SHOWCASE_AMQP_PASSWORD=guest
  # - SHOWCASE_AMQP_QUEUE_SUFFIX=nodejs_queue_
  # RabbitMQ default message processing in and out settings
  # - SHOWCASE_AMQP_TTN_EXCHANGE_OUT=showcase.ttn_message
  # - SHOWCASE_AMQP_KPN_EXCHANGE_IN=showcase.kpn_message
  # - SHOWCASE_AMQP_KPN_EXCHANGE_OUT # defaults to SHOWCASE_AMQP_TTN_EXCHANGE_OUT value
  # - SHOWCASE_AMQP_DECODE_EXCHANGE_IN # defaults to SHOWCASE_AMQP_TTN_EXCHANGE_OUT value
  # - SHOWCASE_AMQP_DECODE_EXCHANGE_OUT=showcase.observation
  # - SHOWCASE_AMQP_OBSERVATION_LOG_EXCHANGE_IN # defaults to SHOWCASE_AMQP_DECODE_EXCHANGE_OUT value
  # - SHOWCASE_AMQP_OBSERVATION_LOG_EXCHANGE_OUT=showcase.logged_observation
  # - SHOWCASE_AMQP_ALERT_EXCHANGE_IN # defaults to SHOWCASE_AMQP_OBSERVATION_LOG_EXCHANGE_OUT value
  # - SHOWCASE_AMQP_ALERT_EXCHANGE_OUT=showcase.alert"
  # - SHOWCASE_AMQP_ALERT_LOG_EXCHANGE_IN # defaults SHOWCASE_AMQP_ALERT_EXCHANGE_OUT
  # - SHOWCASE_AMQP_ALERT_LOG_EXCHANGE_OUT=showcase.notification
  # - SHOWCASE_AMQP_NOTIFICATION_EXCHANGE_IN # defaults to SHOWCASE_AMQP_ALERT_LOG_EXCHANGE_OUT value
  # - SHOWCASE_AMQP_NOTIFICATION_EXCHANGE_OUT=showcase.logged_notification
  # - SHOWCASE_AMQP_SLACK_EXCHANGE_IN # defaults to SHOWCASE_AMQP_NOTIFICATION_EXCHANGE_OUT value
  # - SHOWCASE_AMQP_SLACK_EXCHANGE_OUT=showcase.notification_sent_slack
  # - SHOWCASE_AMQP_TELEGRAM_EXCHANGE_IN # defaults to SHOWCASE_AMQP_NOTIFICATION_EXCHANGE_OUT value
  # - SHOWCASE_AMQP_TELEGRAM_EXCHANGE_OUT=showcase.notification_sent_telegram
  # - SHOWCASE_AMQP_SMS_EXCHANGE_IN # defaults to SHOWCASE_AMQP_NOTIFICATION_EXCHANGE_OUT value
  # - SHOWCASE_AMQP_SMS_EXCHANGE_OUT=showcase.notification_sent_sms
  # Slack settings
  # - SHOWCASE_SLACK_HOOK_URL=https://hooks.slack.com/services/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
  # Telegram settings
  # - SHOWCASE_TELEGRAM_TOKEN=292441232:AAHS3zE8dyJWRUCx29bLx-MOwWEpimRt0mk
  # - SHOWCASE_TELEGRAM_CHAT_ID=-1001097331998 # default chatid, if no chatid is defined in parameter p1
  # Sms (twilio) settings
  # - SHOWCASE_TWILIO_SID=AC600a293801150c7c3af3a5747a3ba4ae
  # - SHOWCASE_TWILIO_TOKEN=ad1f82c56f5b9f048e72558ae984edf8
  # - SHOWCASE_TWILIO_FROM_PHONE=+19787124065
  networks:
   mynet:
    ipv4_address: ${SHOWCASE_IP_ADDRESS_BACKEND}
  logging:
   driver: "gelf"
   options:
    gelf-address: "udp://172.25.0.100:12201"

networks:
 mynet:
  driver: bridge
  ipam:
   config:
    - subnet: 172.25.0.0/24

volumes:
 nexus3:
 mongodb-data:
 mongodb-conf:
 graylog-data:
 graylog-conf:
 elastic-data:
