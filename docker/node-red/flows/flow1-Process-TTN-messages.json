[{"id":"842e249a.6df468","type":"mqtt in","z":"97f270ed.0e384","name":"TTN exchange receiver","topic":"#","qos":"1","broker":"ed3b0860.c759b8","x":109,"y":307,"wires":[["123cc53d.31fb9b","61931666.dd1188"]]},{"id":"123cc53d.31fb9b","type":"json","z":"97f270ed.0e384","name":"","x":305,"y":292,"wires":[["33463682.88a03a","8da51734.d9e7e8","e82049c8.da6688"]]},{"id":"61931666.dd1188","type":"debug","z":"97f270ed.0e384","name":"","active":false,"console":"false","complete":"true","x":305,"y":332,"wires":[]},{"id":"3cb95449.ccf2fc","type":"mysql","z":"97f270ed.0e384","mydb":"cbe500ee.718ca","name":"","x":1068,"y":27,"wires":[[]]},{"id":"6c633151.4557b","type":"function","z":"97f270ed.0e384","name":"Log heartbeat in MySQL","func":"var temp = msg.payload.fields.temp;\nmsg.topic = \n     \"INSERT INTO event ( \" +\n     \"version,\" +\n     \"date_created,\" +\n     \"event_type_id,\" +\n     \"sensor_id,\" +\n     \"class,\" + \n     \"status,\" +\n     \"temperature) \" +\n     \"SELECT \" +\n        \"1,\" +\n        \"'\"+new Date().toISOString().slice(0, 19).replace('T', ' ')+\"',\" +\n        \"2,\" +\n        \"id, \" + \n        \"'showcase.event.TemperatureEvent',\" +\n        \"NULL,\" +\n        (temp !== \"ER\" ? temp : \"NULL\") + \" \" + \n      \"FROM sensor WHERE identifier LIKE '\" + msg.payload.dev_eui + \"';\";\nmsg.heartbeatPayload = msg.payload;\n\nreturn msg;\n","outputs":1,"noerr":0,"x":824,"y":27,"wires":[["3cb95449.ccf2fc"]]},{"id":"e82049c8.da6688","type":"amqp out","z":"97f270ed.0e384","name":"ruwe stroom RabbitMQ","routingkey":"","iotype":"1","ioname":"showcase.raw","server":"62d11e19.37f06","x":520,"y":231,"wires":[]},{"id":"33463682.88a03a","type":"function","z":"97f270ed.0e384","name":"n2s_converter","func":"// { \"gatewayEui\": \"0000024B0805026F\", \"nodeEui\": \"02015E01\", \"time\": \"2016-02-18T09:58:49.075896468Z\", \"frequency\": 868.5, \"dataRate\": \"SF7BW125\", \n// \"rssi\": -30, \"snr\": 6.5, \"rawData\": \"QAFeAQIAmyIBImZILKIpUOq5l37/UUg=\", \"data\": \"CgAUVXiVKQAQIw==\" }\n\nmsg2 = {};\nmsg2.payload = {};\nmsg2.payload.dev_id = msg.payload.dev_eui.substring(8,16);\nmsg2.payload.counter = msg.payload.counter;\nmsg2.payload.datatxt = new Buffer(msg.payload.payload, 'base64').toString();\nmsg2.payload.datahex = new Buffer(msg.payload.payload, 'base64').toString('hex');\n\nreturn msg2;","outputs":"1","noerr":0,"x":491,"y":398,"wires":[["adff483d.157558","3cb3b29e.73ce8e"]]},{"id":"adff483d.157558","type":"debug","z":"97f270ed.0e384","name":"","active":false,"console":"false","complete":"false","x":686,"y":397,"wires":[]},{"id":"3cb3b29e.73ce8e","type":"file","z":"97f270ed.0e384","name":"","filename":"ttn_logging","appendNewline":true,"createDir":true,"overwriteFile":"false","x":686,"y":437,"wires":[]},{"id":"f56d31d5.4c1d3","type":"amqp out","z":"97f270ed.0e384","name":"keepalive RabbitMQ","routingkey":"","iotype":"1","ioname":"showcase.keepalive","server":"62d11e19.37f06","x":812,"y":227,"wires":[]},{"id":"8da51734.d9e7e8","type":"function","z":"97f270ed.0e384","name":"Decode and split payload","func":"var payload = new Buffer(msg.payload.payload, 'base64').toString();\nmsg.payload.payload = payload;\n\n// decode msg payload string to fields\nif (msg.payload.payload.startsWith(\"Alive\")) {\n    msg.payload.fields = {\n        msgType: \"Alive\",\n        node_id: payload.substring(5,6),\n        temp: payload.substring(7,12),\n        hum: payload.substring(13,18),\n        volt: payload.substring(19,24)\n    }\n    return [msg, null];\n} else if (msg.payload.payload.startsWith('Sensor')) {\n    var isOpen = payload.substring(8,9) === '1';\n    msg.payload.fields = {\n        msgType: \"Sensor\",\n        isOpen: isOpen,\n        alarm: \"deksel \" + (isOpen ? \"open\" : \"dicht\")\n    }\n    return [null, msg];\n}\n","outputs":"2","noerr":0,"x":519,"y":292,"wires":[["6c633151.4557b","f56d31d5.4c1d3","59c4f930.245228","9d1d9208.a3653","e288718f.1263","6b348b46.902854"],["826ad289.02edd"]]},{"id":"f516bbe9.380d78","type":"function","z":"97f270ed.0e384","name":"timeout alarm","func":"var dev_eui = msg.requestPayload.dev_eui;\nvar keepAliveTimeout = msg.payload[0].keepalivetimeout;\nvar heartbeatTimers = context.get(\"heartbeatTimers\")||{};\n\n// reset heartbeat timeout timer\nif (typeof heartbeatTimers[dev_eui] !== 'undefined') {\n    clearTimeout(heartbeatTimers[dev_eui]);\n}\n\n// start new timeout timer\nheartbeatTimers[dev_eui] = setTimeout(function() {\n    // timeout has expired, send warning\n    delete heartbeatTimers[dev_eui];\n    var timeoutMsg = {\n        topic: \"timeout\",\n        payload: {\n            fields: {\n                alarm: \"No heartbeat received during \" + keepAliveTimeout + \" seconds, check if the device is still alive!\",\n                timeout: keepAliveTimeout\n            },\n            dev_eui: dev_eui\n        }\n    };\n    node.send(timeoutMsg);\n}, keepAliveTimeout * 1000); // timeout in ms\ncontext.set(\"heartbeatTimers\", heartbeatTimers);\n\nreturn null;","outputs":1,"noerr":0,"x":1193,"y":243,"wires":[["6c76c1de.a9c9b"]]},{"id":"826ad289.02edd","type":"function","z":"97f270ed.0e384","name":"Sensor open alarm","func":"// we don't need to do anything here\nreturn msg;","outputs":1,"noerr":0,"x":797,"y":340,"wires":[["839ecaad.995e98"]]},{"id":"9d1d9208.a3653","type":"function","z":"97f270ed.0e384","name":"Log heartbeat temp in domoticz","func":"var fields = msg.payload.fields;\nvar domoticzMsg = {};\n\nif (fields.temp === \"ER\") {\n  // Temperature error\n  return null;\n} else {\n    // voor Domoticz\n    domoticzMsg.payload = {\n        idx: 19,\n        svalue: fields.temp,\n        node_id: fields.node_id\n    };\n    return domoticzMsg;\n}\n","outputs":1,"noerr":0,"x":844,"y":77,"wires":[["c3173051.f0926"]]},{"id":"59c4f930.245228","type":"function","z":"97f270ed.0e384","name":"Log heartbeat volt in domoticz","func":"var fields = msg.payload.fields;\nvar domoticzMsg = {};\n\nif (fields.volt === \"ER\") {\n  // Voltage error\n  return null;\n} else {\n    // voor Domoticz\n    domoticzMsg.payload = {\n        idx: 20,\n        svalue: fields.volt,\n        node_id: fields.node_id\n    };\n    return domoticzMsg;\n}\n","outputs":1,"noerr":0,"x":842,"y":127,"wires":[["d00e71a0.53c1d"]]},{"id":"c3173051.f0926","type":"mqtt out","z":"97f270ed.0e384","name":"domoticz/in (prowl)","topic":"domoticz/in","qos":"","retain":"","broker":"1185a379.d097bd","x":1096,"y":77,"wires":[]},{"id":"d00e71a0.53c1d","type":"mqtt out","z":"97f270ed.0e384","name":"domoticz/in (prowl)","topic":"domoticz/in","qos":"","retain":"","broker":"1185a379.d097bd","x":1098,"y":127,"wires":[]},{"id":"e288718f.1263","type":"function","z":"97f270ed.0e384","name":"Heartbeat alarm lookup","func":"// needs the following fields:\n//      msg.payload.fields.alarm: alarm message to display\n//      msg.payload.dev_eui: device id\n\nmsg.topic = \"SELECT identifier AS devid, keepalivetimeout, mintemp, maxtemp, minvolt, maxvolt, minhumidity, maxhumidity FROM sensor where identifier = '\"+ msg.payload.dev_eui + \"'\";\nmsg.requestPayload = msg.payload;\nmsg.payload = {};\n\nreturn msg;","outputs":1,"noerr":0,"x":817.5,"y":285.4499816894531,"wires":[["625eba32.dc0704"]]},{"id":"625eba32.dc0704","type":"mysql","z":"97f270ed.0e384","mydb":"cbe500ee.718ca","name":"","x":1018,"y":285,"wires":[["c0a58787.45fd68","32752acb.23e096","f516bbe9.380d78","6eea46fd.befa"]]},{"id":"c0a58787.45fd68","type":"function","z":"97f270ed.0e384","name":"temperature alarm","func":"var dev_eui = msg.requestPayload.dev_eui;\nvar minTemp = msg.payload[0].mintemp;\nvar maxTemp = msg.payload[0].maxtemp;\nvar currentTemp = msg.requestPayload.fields.temp;\n\ntry {\nif (currentTemp < minTemp || currentTemp > maxTemp) {\n    return {\n        topic: \"timeout\",\n        payload: {\n            fields: {\n                alarm: \"Temperatuur buiten range, huidige temperatuur: \" + currentTemp + \"C\",\n                temp: currentTemp\n            },\n            dev_eui: dev_eui\n        }\n    };    \n} else {\n    return null;\n}\n} catch (error) {\n    // ignore non-existing or illegal temperature field errors\n    return null;\n}\n","outputs":1,"noerr":0,"x":1202.5,"y":283.45001220703125,"wires":[["6c76c1de.a9c9b"]]},{"id":"32752acb.23e096","type":"function","z":"97f270ed.0e384","name":"voltage alarm","func":"var dev_eui = msg.requestPayload.dev_eui;\nvar minVolt = msg.payload[0].minvolt;\nvar maxVolt = msg.payload[0].maxvolt;\nvar currentVolt = msg.requestPayload.fields.volt;\n\ntry {\n    if (currentVolt < minVolt || currentVolt > maxVolt) {\n        return {\n            topic: \"timeout\",\n            payload: {\n                fields: {\n                    alarm: \"Voedingsspanning buiten range, huidige spanning: \" + currentVolt + \"V\",\n                    volt: currentVolt\n                },\n                dev_eui: dev_eui\n            }\n        };    \n    } else {\n        return null;\n    }\n} catch (error) {\n    // ignore non-existing or illegal voltage field errors\n    return null;\n}","outputs":1,"noerr":0,"x":1194.5,"y":324.45001220703125,"wires":[["6c76c1de.a9c9b"]]},{"id":"6c76c1de.a9c9b","type":"link out","z":"97f270ed.0e384","name":"","links":["16eb035d.16c15d","894aa939.da0a38"],"x":1357.5,"y":283.29998779296875,"wires":[]},{"id":"839ecaad.995e98","type":"link out","z":"97f270ed.0e384","name":"Send notification","links":["16eb035d.16c15d","894aa939.da0a38"],"x":927.5,"y":340.29998779296875,"wires":[]},{"id":"27ad23b4.b5636c","type":"link in","z":"97f270ed.0e384","name":"TTN test msg","links":["4c559d18.7cb7e4","c1670e4.4955cf"],"x":193.5,"y":264.1499938964844,"wires":[["123cc53d.31fb9b"]]},{"id":"6b348b46.902854","type":"function","z":"97f270ed.0e384","name":"Log heartbeat hum in domoticz","func":"var fields = msg.payload.fields;\nvar domoticzMsg = {};\n\nif (fields.hum === \"ER\") {\n  // Humidity error\n  return null;\n} else {\n    // voor Domoticz\n    domoticzMsg.payload = {\n        idx: 22,\n        nvalue: Number(fields.hum.split(\".\")[0]),\n        node_id: fields.node_id\n    };\n    return domoticzMsg;\n}\n","outputs":1,"noerr":0,"x":841,"y":179,"wires":[["73b7218b.1a003"]]},{"id":"73b7218b.1a003","type":"mqtt out","z":"97f270ed.0e384","name":"domoticz/in (prowl)","topic":"domoticz/in","qos":"","retain":"","broker":"1185a379.d097bd","x":1097,"y":178,"wires":[]},{"id":"6eea46fd.befa","type":"function","z":"97f270ed.0e384","name":"humidity alarm","func":"var dev_eui = msg.requestPayload.dev_eui;\nvar minHumidity = msg.payload[0].minhumidity;\nvar maxHumidity = msg.payload[0].maxhumidity;\nvar currentHum = msg.requestPayload.fields.hum;\n\ntry {\n    if (currentHum < minHumidity || currentHum > maxhumidity) {\n        return {\n            topic: \"timeout\",\n            payload: {\n                fields: {\n                    alarm: \"Luchtvochtigheid buiten range, huidige luchtvochtigheid: \" + currentHum + \"%\",\n                    hum: currentHum\n                },\n                dev_eui: dev_eui\n            }\n        };    \n    } else {\n        return null;\n    }\n} catch (error) {\n    // ignore non-existing or illegal humidity field errors\n    return null;\n}","outputs":1,"noerr":0,"x":1193,"y":367,"wires":[["6c76c1de.a9c9b"]]},{"id":"ed3b0860.c759b8","type":"mqtt-broker","z":"","broker":"staging.thethingsnetwork.org","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willRetain":"false","willPayload":"","birthTopic":"","birthQos":"0","birthRetain":"false","birthPayload":""},{"id":"cbe500ee.718ca","type":"MySQLdatabase","z":"","host":"172.25.0.8","port":"3306","db":"showcase","tz":""},{"id":"62d11e19.37f06","type":"amqp-server","z":"","host":"rabbitmq","port":"5672","vhost":"","keepalive":"30","usetls":false,"verifyservercert":true,"usetopology":false,"topology":"{\n\t\"exchanges\": [\n\t\t{\"name\": \"exchange1\", \"type\": \"direct\", \"options\": {\"durable\": false}},\n\t\t{\"name\": \"exchange2\"}\n\t],\n\t\"queues\": [\n\t\t{\"name\": \"queue1\", \"options\": {\"messageTtl\": 60000}},\n\t\t{\"name\": \"queue2\"}\n\t],\n\t\"bindings\": [\n\t\t{\"source\": \"exchange1\", \"queue\": \"queue1\", \"pattern\": \"debug\", \"args\": {}},\n\t\t{\"source\": \"exchange1\", \"exchange\": \"exchange2\", \"pattern\": \"error\"},\n\t\t{\"source\": \"exchange2\", \"queue\": \"queue2\"}\n\t]\n}"},{"id":"1185a379.d097bd","type":"mqtt-broker","z":"","broker":"rabbitmq","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""}]